# Generated by Django 2.1 on 2018-11-14 13:53
from django.contrib.gis.db.backends.postgis.schema import PostGISSchemaEditor
from django.db import migrations
from django.db.migrations.state import StateApps


def set_initial_specialities(apps: StateApps, schema_editor: PostGISSchemaEditor):
    Speciality = apps.get_model('salon', 'Speciality')
    specialities_list = [
        {
            "name": "Cut",
            "keywords": ['Haircut', 'Hairstyle', 'Trim', 'Cut and Style']
        },
        {
            "name": "Color",
            "keywords": ['Roots', 'Regrowth', 'Touchup', 'Dye', 'Tint']
        },
        {
            "name": "Locs",
            "keywords": ['Dreads', 'Dreadlocks', 'Faux locs', 'Dread extensions', 'Crochet locs']
        },
        {
            "name": "Braids",
            "keywords": ['Box braids', 'Cornrows', 'Plaits', 'Twists']
        },
        {
            "name": "Natural Hair",
            "keywords": ['Natural Styles', 'Black Hair', 'Protective styles', 'Coil set',
                         'Bantu Knots', 'Two strand twists', 'Hydration', 'Moisturizing',
                         'Flexi rods', 'Flat twists']
        },
        {
            "name": "Silk press",
            "keywords": ['Straightening', 'Flat iron', 'Silk flat iron']
        },
        {
            "name": "Weaves",
            "keywords": ['Weave', 'Sew in', 'Extensions', 'Hair extensions', 'Natural Hair Weave']
        },
        {
            "name": "Perm",
            "keywords": ['Curly perm', 'Perms', 'Permanent Straightening', 'Body Perm',
                         'Loose Perm', 'Relaxer', 'Touch up', 'Touch-up']
        },
        {
            "name": "Balayage",
            "keywords": ['Balayage Color', 'Balayage Highlights', 'Ombre', 'Blonde']
        },
        {
            "name": "Highlights",
            "keywords": ['Blonde', 'Foils', 'Lowlights', 'Root touch up', 'Tips', 'Root touch-up']
        },
        {
            "name": "Wash & Style",
            "keywords": ['Wash and go', 'Updo', 'Styles', 'Wedding Hair', 'Pony tails',
                         'Ponytails']
        },
        {
            "name": "Blowout",
            "keywords": ['Blow wave', 'Curl', 'Straightening', 'Blow Dry']
        },
        {
            "name": "Wash & Curl",
            "keywords": ['Curls', 'Curling', 'Waving']
        },
        {
            "name": "Wig",
            "keywords": ['Lace fronts', 'Human Hair Wigs', 'Full Lace', 'Lace Wigs',
                         'Real Hair Wigs', 'Lace Frontal']
        }
    ]
    for speciality_item in specialities_list:
        Speciality.objects.create(name=speciality_item['name'], keywords=speciality_item['keywords'])


class Migration(migrations.Migration):

    dependencies = [
        ('salon', '0068_auto_20181113_1347'),
    ]

    operations = [
        migrations.RunPython(code=set_initial_specialities, reverse_code=migrations.RunPython.noop)
    ]
