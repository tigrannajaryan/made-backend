# Generated by Django 2.1 on 2018-09-04 13:29
import logging

from django.conf import settings
from django.db import migrations

logger = logging.getLogger(__name__)

def forwards(apps, schema_editor):
    if not settings.READ_ONLY_USER_PASSWORD:
        logger.info("Skipping creating user --environment variable doesnot exist")
        return
    schema_editor.execute(
        "DO $$"
            "BEGIN"
            "  CREATE USER readonly_user WITH ENCRYPTED PASSWORD '{0}';"
            "  EXCEPTION WHEN OTHERS THEN"
            "  RAISE NOTICE 'not creating role readonly_user -- it already exists';"
            "END"
            "$$;"
            # First, grant connect access
            "GRANT CONNECT ON DATABASE {1} TO readonly_user;"
            # Then grant SELECT for all existing tables
            "GRANT SELECT ON ALL TABLES IN SCHEMA public TO readonly_user;"
            # Grant select for tables that are newly created
            "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO readonly_user;"
            # Create schema exists by default. Remove them.
            "REVOKE CREATE ON SCHEMA public FROM readonly_user;".format(
                settings.READ_ONLY_USER_PASSWORD,
                settings.DATABASES['default']['NAME'])
    )


def backwards(apps, schema_editor):
    schema_editor.execute(
        "DO $$"
            "BEGIN"
            "   DROP OWNED BY readonly_user;"
            "   DROP USER readonly_user;"
            "   EXCEPTION WHEN OTHERS THEN"
            "   RAISE NOTICE 'not dropping role readonly_user -- it does not exist';"
            "END"
            "$$;"
    )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0025_phonesmscodes'),
    ]

    operations = [
        migrations.RunPython(forwards, backwards)
    ]