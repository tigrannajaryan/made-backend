# Generated by Django 2.1 on 2018-10-18 16:18

from django.db import migrations


def forward(app, schema_editor):
    schema_editor.execute(
        '''
        DO
        $do$
        begin


            drop view if exists public.rpt_stylist cascade;

            create or replace view public.rpt_stylist as
            select
                st.id stylist_id,
                coalesce( srv.stylist_services_count, 0) stylist_services_count,
                srv.avg_regular_price,
                coalesce( wd.weekday_discounts_count, 0)::int weekday_discounts_count,
                case when coalesce( wd.weekday_discounts_count, 0) > 0
                    then 1 else 0
                    end is_daily_discount,
                coalesce( wd.avg_weekday_discount, 0) avg_weekday_discount,
                (0 < any( st.rebook_discounts))::int is_loyalty_discount,
                case when 0 = all( st.rebook_discounts)
                    then 0::float
                    else
                    (select avg( nullif( discount, 0)) from unnest( st.rebook_discounts) discount)
                    end avg_loyalty_discount,
                (st.rebook_within_1_week_discount_percent > 0)::int is_first_week_discount,
                st.first_time_book_discount_percent,
                st.rebook_within_1_week_discount_percent,
                (st.maximum_discount > 0 and st.is_maximum_discount_enabled)::int is_maximum_discount_enabled,
                case when not st.is_maximum_discount_enabled
                    then null else st.maximum_discount
                    end maximum_discount,
                (0 = all( st.rebook_discounts ||
                    array[
                        st.is_maximum_discount_enabled::int4,
                        coalesce( wd.weekday_discounts_count, 0)::int4
                        ]))::int no_discount_count
            from (
                    select *,
                        array[ rebook_within_1_week_discount_percent,
                            rebook_within_2_weeks_discount_percent,
                            rebook_within_3_weeks_discount_percent,
                            rebook_within_4_weeks_discount_percent,
                            rebook_within_5_weeks_discount_percent,
                            rebook_within_6_weeks_discount_percent] rebook_discounts
                    from public.stylist
                ) st
                left join (
                    select ss.stylist_id,
                        count( ss.id) stylist_services_count,
                        avg( ss.regular_price) avg_regular_price
                    from public.stylist_service ss
                    where ss.is_enabled = true and ss.deleted_at is null
                    group by ss.stylist_id
                ) srv
                    on st.id = srv.stylist_id
                left join (
                    select swd.stylist_id,
                        count( swd.id) weekday_discounts_count,
                        avg( swd.discount_percent) avg_weekday_discount
                    from public.stylist_weekday_discount swd
                    where swd.discount_percent > 0
                    group by swd.stylist_id
                ) wd
                    on st.id = wd.stylist_id
                inner join public.rpt_user ss
                    on st.id = ss.stylist_id
            ;


        end
        $do$;
        '''
    )


def backward(app, schema_editor):
    schema_editor.execute(
        '''
        DO
        $do$
        begin


            drop view if exists public.rpt_stylist cascade;

            create or replace view public.rpt_stylist as
            select
                st.id stylist_id,
                coalesce( srv.stylist_services_count, 0) stylist_services_count,
                srv.avg_regular_price,
                coalesce( wd.weekday_discounts_count, 0)::int weekday_discounts_count,
                case when coalesce( wd.weekday_discounts_count, 0) > 0
                    then 1 else 0
                    end is_daily_discount,
                coalesce( wd.avg_weekday_discount, 0) avg_weekday_discount,
                (0 < any( st.rebook_discounts))::int is_loyalty_discount,
                case when 0 = all( st.rebook_discounts)
                    then 0::float
                    else
                    (select avg( nullif( discount, 0)) from unnest( st.rebook_discounts) discount)
                    end avg_loyalty_discount,
                (st.rebook_within_1_week_discount_percent > 0)::int is_first_week_discount,
                st.first_time_book_discount_percent,
                st.rebook_within_1_week_discount_percent,
                (st.maximum_discount > 0 and st.is_maximum_discount_enabled)::int is_maximum_discount_enabled,
                case when not st.is_maximum_discount_enabled
                    then null else st.maximum_discount
                    end maximum_discount,
                (0 = all( st.rebook_discounts ||
                    array[
                        st.is_maximum_discount_enabled::int4,
                        coalesce( wd.weekday_discounts_count, 0)::int4
                        ]))::int no_discount_count
            from (
                    select *,
                        array[ rebook_within_1_week_discount_percent,
                            rebook_within_2_weeks_discount_percent,
                            rebook_within_3_weeks_discount_percent,
                            rebook_within_4_weeks_discount_percent,
                            rebook_within_5_weeks_discount_percent,
                            rebook_within_6_weeks_discount_percent] rebook_discounts
                    from public.stylist
                ) st
                left join (
                    select ss.stylist_id,
                        count( ss.id) stylist_services_count,
                        avg( ss.regular_price) avg_regular_price
                    from public.stylist_service ss
                    where ss.is_enabled = true and ss.deleted_at is null
                    group by ss.stylist_id
                ) srv
                    on st.id = srv.stylist_id
                left join (
                    select swd.stylist_id,
                        count( swd.id) weekday_discounts_count,
                        avg( swd.discount_percent) avg_weekday_discount
                    from public.stylist_weekday_discount swd
                    where swd.discount_percent > 0
                    group by swd.stylist_id
                ) wd
                    on st.id = wd.stylist_id
                inner join public.rpt_user ss
                    on st.id = ss.client_id
            ;

        end
        $do$;
        '''
    )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0034_trigram_gin_index'),
        ('salon', '0059_remove_invitation_created_real_client'),
        ('client', '0021_client_privacy'),
        ('appointment', '0033_remove_appointment_real_client'),
    ]

    operations = [
        migrations.RunPython(forward, backward),
    ]
