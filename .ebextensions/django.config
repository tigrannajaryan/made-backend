option_settings:
  aws:elasticbeanstalk:application:environment:
    PYTHONPATH: "/opt/python/current/app/betterbeauty:$PYTHONPATH"
  aws:elasticbeanstalk:container:python:
    WSGIPath: betterbeauty/core/wsgi.py
  aws:elasticbeanstalk:container:python:staticfiles:
    /static/: betterbeauty/static/

files:
    "/etc/httpd/conf.d/wsgi_custom.conf":
        mode: "000644"
        owner: root
        group: root
        content: |
            WSGIPassAuthorization On

            LoadModule deflate_module modules/mod_deflate.so

            SetOutputFilter DEFLATE

            # mod_deflate configuration
            <IfModule mod_deflate.c>
                # Restrict compression to these MIME types
                AddOutputFilterByType DEFLATE text/plain
                AddOutputFilterByType DEFLATE text/html
                AddOutputFilterByType DEFLATE text/javascript
                AddOutputFilterByType DEFLATE text/css
                AddOutputFilterByType DEFLATE application/json
                <IfModule mod_headers.c>
                    # Make sure proxies don't deliver the wrong content
                    Header append Vary User-Agent env=!dont-vary
                </IfModule>
            </IfModule>
    "/etc/cron.d/mb_cron":
        mode: "000644"
        owner: root
        group: root
        content: |
            */15 * * * * root source /opt/python/run/venv/bin/activate && source /opt/python/current/env && COMMAND=auto_checkout_appointments make -C /opt/python/current/app -f /opt/python/current/app/Makefile manage >/dev/null 2>&1
            */5 * * * * root source /opt/python/run/venv/bin/activate && source /opt/python/current/env && COMMAND=geocode_address make -C /opt/python/current/app -f /opt/python/current/app/Makefile manage >/dev/null 2>&1
    "/tmp/setup_loggly.sh":
        mode: "000774"
        owner: root
        group: root
        content: |
            #!/usr/bin/env bash
            # auto-generate rsyslog file
            sudo cat > /etc/rsyslog.d/22-loggly.conf << EOL
            # Setup disk assisted queues
            \$WorkDirectory /var/spool/rsyslog # where to place spool files
            \$ActionQueueFileName fwdRule1     # unique name prefix for spool files
            \$ActionQueueMaxDiskSpace 1g       # 1gb space limit (use as much as possible)
            \$ActionQueueSaveOnShutdown on     # save messages to disk on shutdown
            \$ActionQueueType LinkedList       # run asynchronously
            \$ActionResumeRetryCount -1        # infinite retries if host is down
            \$template LogglyFormat,"<%pri%>%protocol-version% %timestamp:::date-rfc3339% %HOSTNAME% %app-name% %procid% %msgid% [$LOGGLY_TOKEN@41058 tag=\"server_$LEVEL\"] %msg%\n"

            # Send messages to Loggly over TCP using the template.
            *.* @@logs-01.loggly.com:514;LogglyFormat
            \$MaxMessageSize 64k
            EOL

            sudo cat > /etc/rsyslog.d/21-django.conf << EOL
            #provides UDP syslog reception
            \$ModLoad imudp
            \$UDPServerRun 514
            #Add a tag for Django events
            \$template LogglyFormatDjango,"<%pri%>%protocol-version% %timestamp:::date-rfc3339% %HOSTNAME% %app-name% %procid% %msgid% [$LOGGLY_TOKEN@41058 tag=\"madebeauty_$LEVEL\"] %msg%\n"
            local7.* @@logs-01.loggly.com:514;LogglyFormatDjango
            local7.* ~ #discards the messages so they don't end up in /var/log/syslog
            EOL
            mkdir /var/spool/rsyslog || true
            sudo groupadd -f django-loggers
            sudo usermod -G django-loggers,wsgi wsgi
            sudo usermod -G django-loggers,ec2-user,wheel ec2-user
            sudo mkdir -p /var/log/madebeauty || true
            sudo chgrp -R django-loggers /var/log/madebeauty
            sudo chmod -R 775 /var/log/madebeauty
            sudo service rsyslog restart

container_commands:
    01_yum_update:
        command: sudo yum -y update
    02_epel_repo:
        command: sudo yum-config-manager -y --enable epel
    03_install_gdal_packages:
        command: sudo yum -y install gdal gdal-devel
    04_migrate:
        command: "source /opt/python/run/venv/bin/activate && source /opt/python/current/env && python betterbeauty/manage.py migrate"
        leader_only: true
    05_collect_static:
        command: "source /opt/python/run/venv/bin/activate && source /opt/python/current/env && python betterbeauty/manage.py collectstatic --noinput"

commands:
    01_remove_old_cron:
        command: "rm -f /etc/cron.d/*.bak"
    02_configure_rsyslog_for_loggly:
        command: "source /opt/python/run/venv/bin/activate && source /opt/python/current/env && /tmp/setup_loggly.sh"
    03_cleanup_rsyslog_setup:
        command: "rm -f /tmp/setup_loggly.sh*"

